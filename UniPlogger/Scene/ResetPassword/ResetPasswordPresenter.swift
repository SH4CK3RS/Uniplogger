//
//  ResetPasswordPresenter.swift
//  UniPlogger
//
//  Created by 손병근 on 2020/12/13.
//  Copyright (c) 2020 손병근. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ResetPasswordPresentationLogic {
    func presentResetPassword(response: ResetPassword.ResetPassword.Response)
    func presentValidatePassword(response: ResetPassword.ValidatePassword.Response)
    func presentValidatePasswordConfirm(response: ResetPassword.ValidatePasswordConfirm.Response)
}

class ResetPasswordPresenter: ResetPasswordPresentationLogic {
    weak var viewController: ResetPasswordDisplayLogic?
    
    var isValidPassword: Bool = false
    var isValidPasswordConfirm: Bool = false
    
    func presentResetPassword(response: ResetPassword.ResetPassword.Response) {
        guard let result = response.response, response.error == nil else {
            self.viewController?.displayError(error: response.error!, useCase: .ResetPassword(response.request))
            return
        }
        
        let viewModel = ResetPassword.ResetPassword.ViewModel(detail: result.detail)
        self.viewController?.displayResetPassword(viewModel: viewModel)
    }
    
    func presentValidatePassword(response: ResetPassword.ValidatePassword.Response) {
        self.isValidPassword = response.isValid
        let viewModel = ResetPassword.ValidationViewModel(isValid: isValidPassword && isValidPasswordConfirm)
        viewController?.displayValidation(viewModel: viewModel)
    }
    
    func presentValidatePasswordConfirm(response: ResetPassword.ValidatePasswordConfirm.Response) {
        self.isValidPasswordConfirm = response.isValid
        let viewModel = ResetPassword.ValidationViewModel(isValid: isValidPassword && isValidPasswordConfirm)
        viewController?.displayValidation(viewModel: viewModel)
    }
}
