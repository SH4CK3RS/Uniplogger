//
//  ResetPasswordInteractor.swift
//  UniPlogger
//
//  Created by 손병근 on 2020/12/13.
//  Copyright (c) 2020 손병근. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ResetPasswordBusinessLogic {
    func resetPassword(request: ResetPassword.ResetPassword.Request)
    func validatePassword(request: ResetPassword.ValidatePassword.Request)
    func validatePasswordConfirm(request: ResetPassword.ValidatePasswordConfirm.Request)
}

protocol ResetPasswordDataStore {
    var uid: String! { get set }
    var token: String! { get set }
}

class ResetPasswordInteractor: ResetPasswordBusinessLogic, ResetPasswordDataStore {
    var presenter: ResetPasswordPresentationLogic?
    var worker = ResetPasswordWorker()
    var uid: String!
    var token: String!
    
    func resetPassword(request: ResetPassword.ResetPassword.Request) {
        UPLoader.shared.show()
        self.worker.findPassword(request: request, uid: uid, token: token) { [weak self] (response) in
            self?.presenter?.presentResetPassword(response: response)
        }
    }
    
    func validatePassword(request: ResetPassword.ValidatePassword.Request){
        let text = request.password
        let result = worker.validatePassword(text: text)
        presenter?.presentValidatePassword(response: .init(isValid: result))
    }
    
    func validatePasswordConfirm(request: ResetPassword.ValidatePasswordConfirm.Request){
        let password = request.password
        let passwordConfirm = request.passwordConfirm
        let result = worker.validatePasswordConfirm(password: password, passwordConfirm: passwordConfirm)
        presenter?.presentValidatePasswordConfirm(response: .init(isValid: result))
    }
}
