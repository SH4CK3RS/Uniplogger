//
//  LoginPresenter.swift
//  UniPlogger
//
//  Created by 손병근 on 2020/12/05.
//  Copyright (c) 2020 손병근. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginPresentationLogic {
    func presentValidateAccount(response: Login.ValidateAccount.Response)
    func presentValidatePassword(response: Login.ValidatePassword.Response)
    func presentLogin(response: Login.Login.Response)
}

class LoginPresenter: LoginPresentationLogic {
    weak var viewController: LoginDisplayLogic?
    
    var isValidAccount: Bool = false
    var isValidPassword: Bool = false
    
    func presentValidateAccount(response: Login.ValidateAccount.Response){
        self.isValidAccount = response.isValid
        let viewModel = Login.ValidationViewModel(isValid: isValidAccount && isValidPassword)
        viewController?.displayValidation(viewModel: viewModel)
    }
    
    
    func presentValidatePassword(response: Login.ValidatePassword.Response){
        self.isValidPassword = response.isValid
        let viewModel = Login.ValidationViewModel(isValid: isValidAccount && isValidPassword)
        viewController?.displayValidation(viewModel: viewModel)
    }
    
    func presentLogin(response: Login.Login.Response) {
        guard let user = response.response?.user,
              let token = response.response?.token,
              response.error == nil else {
            viewController?.displayError(error: response.error!, useCase: .Login(response.request))
            return
        }
        AuthManager.shared.userToken = token
        AuthManager.shared.user = user
        
        viewController?.displayLogin()
    }
}
