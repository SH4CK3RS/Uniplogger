//
//  SplashViewController.swift
//  UniPlogger
//
//  Created by 손병근 on 2020/11/24.
//  Copyright (c) 2020 손병근. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import RIBs
import UIKit
import Then

enum SplashPresentableListenerRequest {}

protocol SplashPresentableListener: AnyObject {
    func request(_ request: SplashPresentableListenerRequest)
}

final class SplashViewController: UIViewController, SplashPresntable, SplashViewControllable {
    weak var listener: SplashPresentableListener?
    
    // MARK: View lifecycle
    override func loadView() {
        view = mainView
    }
    
    private let mainView = SplashView()
    
    deinit {
        print(#function)
    }
}

extension SplashViewController: TutorialRootViewControllable {
    func present(_ viewController: ViewControllable, animated: Bool) {
        DispatchQueue.main.async {
            self.present(viewController.uiviewController, animated: animated)
        }
    }
    func dismiss(_ viewController: ViewControllable, animated: Bool) {
        guard viewController.uiviewController === presentedViewController else { return }
        dismiss(animated: animated)
    }
}
